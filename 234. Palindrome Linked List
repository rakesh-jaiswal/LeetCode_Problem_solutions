class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(head==0||head->next==0)
            return true;
      ListNode* slow=head;
       ListNode* fast=head;
        while(fast->next!=NULL&&fast->next->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;
        }
       
        slow->next = reverseList(slow->next);
        slow = slow->next;
        while(slow!=0){
            if(head->val!=slow->val)
                return false;
            head=head->next;
            slow=slow->next;
        }
        return true;
    }
     ListNode *reverseList(ListNode *head)
    {
        ListNode *newHead = NULL;
        ListNode *next = NULL;
        while(head!=NULL)
        {
            next = head->next;
            head->next = newHead;
            newHead = head;
            head = next;
        }
        return newHead;
    }
};
