class Solution {
public:
    
     int subsetcount(vector<int>&a,int s1){
      int t[a.size()+1][s1+1];
      for(int i=0;i<a.size()+1;i++){
         t[i][0]=1;
      }
      for(int j=1;j<s1+1;j++)
      t[0][j]=0;
      for(int i=1;i<a.size()+1;i++){
          for(int j=0;j<s1+1;j++){
              if(a[i-1]<=j){
                  t[i][j]=t[i-1][j-a[i-1]]+t[i-1][j];
              }
              else
              {
                  t[i][j]=t[i-1][j];
              }
          }
      }
      return t[a.size()][s1];
  }
    
    int findTargetSumWays(vector<int>& a, int target) {
         int sum=0;
        for(int i=0;i<a.size();i++){
            sum+=a[i];
        }
        if(target>sum)return 0;
        if((target+sum)%2!=0)return 0;
        int s1=(sum-target)/2;
        return subsetcount(a,s1);
    }
};
